module Main exposing (main)

{-| Ilias' work on a parser renderer; he gave this to
me to provide a renderer for the `elm-tools/parser` package.

After looking briefly at it, I'm worried that it is specifying
the strings too much; those strings are generated by the
`Parser` package itself.

Hence, am toying w/ idea of scaling this back to work only
with the `Parser`


# Main entry

@docs main

-}

import Html exposing (Html, pre, text)
import Time.DateTime exposing (fromISO8601)
import Time.ISO8601Error exposing (renderText)


{-| The "entry"
-}
main : Html msg
main =
    case fromISO8601 "1990-12-32T12:25:12.0Z" of
        Ok v ->
            text <| toString v

        Err e ->
            let
                msg =
                    renderText e
                        ++ "\n\n"
                        ++ toString e
            in
            Html.pre [] [ text <| msg ]
